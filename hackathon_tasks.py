# -*- coding: utf-8 -*-
"""Hackathon_Tasks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UYc7h5iX9WkE05hXk0oypR9QyrZIK3BK
"""

# import all necessary libraries
import pandas as pd
import plotly.express as ex
import numpy as np

# provide the path for dataset
PATH=r"/content/drive/MyDrive/Colab Notebooks/data/dataset.csv"

# load the data into dataframe
df=pd.read_csv(PATH)

# load the top 5 values from dataframe
df.head()

# get the number of rows and columns
df.shape

# get the names of all the columns
df.columns

# get the data types and count of non null values for all the columns
df.info()

"""**Observation:**

* The dataset contains the details about the electric vehicles.
* There are 112634 rows and 17 columns in the dataframe.
* There are no special characters in the column names.
* The datatypes of the columns are appropriate as per the values in the column.
* There are some missing values in the "Model","Legislative District","Vehicle Location","Electric Utility".
* The missing values are treated below using the missing values treatment.

**Missing Values Treatment**
"""

# replace the missing values in Model with mode
df['Model']=df['Model'].fillna(df['Model'].mode())

# find mean
df['Legislative District'].mean()

# find median
df['Legislative District'].median()

# replace the missing values in Legislative District with median as there is variation between mean and median
df['Legislative District']=df['Legislative District'].fillna(df['Legislative District'].median())

# find mode
df['Vehicle Location'].mode()

# replace Nan values with np.nan
df['Vehicle Location']=df['Vehicle Location'].replace('NaN',np.nan)

# find sum of np.nan values
df['Vehicle Location'].isna().sum()

# replace np.nan value with mode
df['Vehicle Location']=df['Vehicle Location'].fillna(df['Vehicle Location'].mode()[0])

# replace Nan values with np.nan
df['Electric Utility']=df['Electric Utility'].replace('NaN',np.nan)

# find sum of np.nan values
df['Electric Utility'].isna().sum()

# find mode
df['Electric Utility'].mode()

# replace np.nan values with mode
df['Electric Utility']=df['Electric Utility'].fillna(df['Electric Utility'].mode()[0])

df.info()

"""**Task1: Univariate and Bivariate Analysis using Plotly Express**

**Univariate Analysis**
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='VIN (1-10)', title='Count Plot of VIN (1-10)')

# Show the plot
fig.show()

"""**Observation:**
* The above plot displays the frequency of the Vehicle Identification Number which provides the various details like vehicle's manufacturer, model year, engine type, country of origin, and various other details.
* It can be observed that the frequency of few VIN is high that is greater than 500 which denote that the vehicles have been manufractured in the same year, same company from the same country.
* Few number of vehicles have the frequency less nearly to zero.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='County', title='Count Plot of County')

# Show the plot
fig.show()

"""**Observation:**
* The above plot denotes the count of vehicles in thousands which are from the particular county.
* The highest number of vehicles that is 59000 vehicles are from county "King".
* Few County have least number of vehicles nearly zero like Palm Beach.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='City', title='Count Plot of City')

# Show the plot
fig.show()

"""**Observation:**
* The above plot shows the count of the vehicles in thousands belonging to the particular city.
* We can observe the highest number of vehicles coming up from Seattle with the frequency of 20.305 thousand.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='State', title='Count Plot of State')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the count of the vehicles in thounsands belonging to the particular state.
* It can be observed that the highest count of vehicles are manufractured in the state "WA" Washington with the count of 112.348K.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Postal Code', title='Count Plot of Postal Code')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the frequency of the vehicles manufractured in the state with particular postal code.
* The highest number of vehicles were manufractured from the state with the postal code in the range of 98-98.099 K.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Model Year', title='Count Plot of Model Year')

# Show the plot
fig.show()

"""**Observation:**
* The above plot shows the frequency of the year in which various models were manufractured.
* It can be observed that the highest number of models were manufractured in the year 2022 with the count of 22000.
* On an average the most of the models were manufractured in the range of 2017 to 2021.
* Least number of models were manufractured from 2000 to 2010. Hence the production is very less in this period.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Make', title='Count Plot of Make')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the frequency of vehicles manufractured from the particular company.
* The Highest number of electric vehicles are manufractured by Tesla with the production greater than 50000.
The average number of vehicles were manufractured by Nissan,Chevrolet,Ford,Toyota and BMW.
* Least number of vehicles were manufractured by Jaguar,Lexus and remaining other.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Model', title='Count Plot of Model')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the count of model of the electric vehicles manufractured by the different companies.
* The highest number of vehicles manufractured are of "Model 3" with the count of 23000.
* The second highest number of vehicles manufractured are of "Model Y" with the count of 17000.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Electric Vehicle Type', title='Count Plot of Electric Vehicle Type')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the freuqency of type of electric vehicles.
* There are two types of electric vehicles that is one with the battery and other with the plug-in hybrid electric vehicle.
* The count of vehicles of battery type are higher than the plug-in hybrid electric vehicles.
* The production of battery type electric vehicles is higher that plug-in hybrid electric vehicles.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Clean Alternative Fuel Vehicle (CAFV) Eligibility', title='Count Plot of Clean Alternative Fuel Vehicle (CAFV) Eligibility')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can determine the count of vehicles with the eligibility of clean alternative fuel.
* The maximum number of electric vehicles are clean alternative fuel vehicle eligible.
* For some of the vehicles the eligibility cannot be determined as the battery range is not available for them.
* The least number of vehicles are not eligible due to the low battery range.
"""

# box plot
fig = ex.box(df, x="Electric Range")
fig.show()

"""**Observation:**
* From the above plot,we can determine the electric vehicles with particular electric range.
* The highest electric range of the vehicles is 337 and lowest electric range is 0.
* The average electric range of the vehicles is 32.
* The major number of electric vehicles are in the range of 32 to 208.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Vehicle Location', title='Count Plot of Vehicle Location')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the frequency of the vehicles in the particular location.
* The location is representated in the form of coordinates denoting the longitude and latitude of the place.
* Around 3000 vehicles are found in the same location.
"""

# Create the count plot using Plotly Express
fig = ex.histogram(df, x='Electric Utility', title='Count Plot of Electric Utility')

# Show the plot
fig.show()

"""**Observation:**
*  "electric utility" refers to the company or organization responsible for generating, transmitting, and distributing electrical power to consumers, including the charging infrastructure for electric vehicles.
* From the above plot, we can observe the count of vehicles utilising the services from the particular company.
* The highest number of vehicles with a count of 40000 are utilising the services from PUGET SOUND ENERGY INC| CITY OF TACOMA|WA.

**Bivariate Analysis:**

Electric Range vs Model Year:
"""

# scatter plot
fig = ex.scatter(x=df['Electric Range'],y=df['Model Year'])
fig.show()

"""**Observation:**
* From the above plot, we can observe the relationship between the year of manufracturing and the electric range of vehicles manufractured in that year.
* The vehicles with highest electric range were manufractured in the year 2020.
* The vehicles with lowest electric range were manufractured in the year 2019.
* The vehicles with the average electric range were manufractured in the year 2020.

Base MSRP vs Model Year
"""

fig = ex.scatter(x=df['Base MSRP'],y=df['Model Year'])
fig.show()

"""**Observation:**
* From the above plot, we can observe the relationship between Base MSRP and Model Year.
* The models that were manufractured in the year 2015 has the highest Base MSRP of 845000.
* The year 2018 had the second highest Base MSRP of 184.45K.
* The least price was 0 for the some of the models manufractured in most of the years.

Electric Vehicle Type vs Base MSRP
"""

# box plot
fig=ex.box(df,x='Electric Vehicle Type',y='Base MSRP')
fig.show()

"""**Observation:**
* From the above plot, we can observe the relationship between Electric Vehicle Type and Base MSRP.
* There are two types of electric vehicles one with the battery and other with plug-in hybrisd electric vehicle.
* The Base MSRP of Plug-in Hybrid Electric Vehicle is higher than the battery electric vehicle.
* The lowest Base MSRP of both the types of electric vehicles are almost similar.

Electric Vehicle Type vs Electric Range
"""

# box plot
fig=ex.box(df,x='Electric Vehicle Type',y='Electric Range')
fig.show()

"""**Observation:**
* From the above plot, we can analyse the relationship between the type of electric vehicle and the electric range.
* The electric range of the battery electric vehicle is higher than the hybrid electric vehicle.
* There are few outliers in the hybrid electric vehicle which indicate that the very few vehicles have higher electric range compared to the remaining vehicles.
* The average electric range of the battery electric vehicles is higher than the average electric range of hybrid electric vehicles.
* Hence, the battery electric vehicles have higher electric ranges than hybrid electric vehicle.

Clean Alternative Fuel Vehicle (CAFV) Eligibility vs Base MSRP
"""

# box plot
fig=ex.box(df,x='Clean Alternative Fuel Vehicle (CAFV) Eligibility',y='Base MSRP')
fig.show()

"""**Observation:**
* From the above plot, we can observe the relationship between the CAFV Eligibility and the Base MSRP.
* There are three categories in the CAFV eligibility where the vehicles which are eligible due to low battery range have highest Base MSRP than the other two categories.
* There are outliers in the eligible vehicles and eligibility unknown vehicles as only few vehicles have the base prices compared to average number of vehicles.
* For most of the vehicles in all the three eligibility categories the base price is zero.

Legislative District vs Electric Vehicle Type
"""

# Create a stacked bar plot
fig = ex.box(df, y='Legislative District', x='Electric Vehicle Type',
             title='Legislative District vs. Electric Vehicle Type')

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the relation between the type of electric vehicle and the legislative district.
* The most of the vehicles of both the types have theie legislative district in the range of 20 to 40.
* The median value in case of battery electric vehicle is little higher than the hybrid electric vehicle.

**Conclusion:**

* Vehicle Production: Some Vehicle Identification Numbers (VINs) have high frequencies, indicating large-scale production in the same year, by the same company, and in the same country. Conversely, some VINs have low frequencies, suggesting lower production volumes.

* Geographic Distribution: "King" county has the highest number of vehicles, and "Seattle" city has the highest vehicle count. The state "WA" (Washington) has the highest overall vehicle production.

* Model Year and Electric Range: The year 2022 had the highest number of models manufactured, with electric ranges ranging from 0 to 337. The majority of models were produced between 2017 and 2021, while the period from 2000 to 2010 had the least production.

* Manufacturer and Electric Vehicle Type: Tesla stands out with the highest production of electric vehicles (over 50,000 units). Other manufacturers like Nissan, Chevrolet, Ford, Toyota, and BMW have average production. In contrast, Jaguar and Lexus have lower production.

* Model and Electric Vehicle Type: "Model 3" has the highest production, followed by "Model Y," indicating their popularity among electric vehicle buyers.

* Clean Alternative Fuel Vehicles: Most electric vehicles are eligible for clean alternative fuel, but some vehicles have indeterminate eligibility due to unavailable battery range information. A few vehicles are not eligible due to their low battery range.

* Base MSRP and Model Year: The highest Base MSRP was recorded for models manufactured in the year 2015, followed by 2018. Some models had a Base MSRP of zero, possibly indicating promotional or special models.

* Base MSRP and Electric Vehicle Type: Plug-in hybrid electric vehicles generally have a higher Base MSRP compared to battery electric vehicles. However, both types of vehicles have similar lowest Base MSRP values.

* Electric Range and Electric Vehicle Type: Battery electric vehicles generally have a higher electric range than plug-in hybrid electric vehicles. There are some outliers among hybrid electric vehicles with higher electric ranges, but on average, battery electric vehicles have greater ranges.

* CAFV Eligibility and Base MSRP: Vehicles eligible due to low battery range have higher Base MSRP compared to the other two eligibility categories. However, there are some outliers and a significant number of vehicles in all categories with a Base MSRP of zero.

* Legislative District and Electric Vehicle Type: Most vehicles of both types fall within the legislative district range of 20 to 40, with battery electric vehicles having slightly higher median values compared to hybrid electric vehicles.

**Task2:Choropleth to display the number of EV vehicles based on location**
"""

# Aggregate electric vehicle count by State
electric_vehicle_count_by_state = df.groupby(['State','Model Year']).size().reset_index(name='EV Count')

# Create the Choropleth plot
fig = ex.choropleth(
    electric_vehicle_count_by_state,
    locations='State',
    locationmode='USA-states',
    color='EV Count',
    scope='usa',
    color_continuous_scale='Viridis',
    labels={'EV Count': 'Electric Vehicle Count'},
    hover_name='State',
    hover_data=['EV Count'],
    title='Electric Vehicle Count by State and  Model Year',
    animation_frame='Model Year'
)

# Show the plot
fig.show()

"""**Observation:**
* From the above plot, we can observe the number of electric vehicles in thousands in each state in the particular Model year.
* The highest number of electric vehicles are found in WA state in 2017 with the count of 8620.
* Similarly the count of the electric vehicles in each state can be determined in every model year.

**Task3:Racing Bar Plot to display the animation of EV Make and its count each year.**
"""

!pip install bar-chart-race

import bar_chart_race as bcr

# Group the data by Model Year and Make to get the count of each EV Make for each year
ev_make_count_by_year = df.groupby(['Model Year', 'Make']).size().reset_index(name='Count')

ev_make_count_pivot = ev_make_count_by_year.pivot(index='Model Year', columns='Make', values='Count')

# Create the Racing Bar Plot
bcr.bar_chart_race(df=ev_make_count_pivot, filename='ev_make_count_racing_bar_plot.mp4')

from IPython.display import HTML, Video

video_path = '/content/ev_make_count_racing_bar_plot.mp4'
Video(video_path, embed=True)